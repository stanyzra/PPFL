;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname trab_part1) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))
#| Uma determinada sala de reunião pode ser usada das 8:00h às 18:00h. Cada interessado em utilizar a sala
faz uma reserva indicando o intervalo de tempo que gostaria de utilizar a sala. Como parte de um sistema de
reservas, você deve projetar uma função que verifique se duas reservas podem ser atendidas, ou seja, não têm
conflito de horário.
|#

#| Análise:
Verificar se duas reservas podem ser atendidas no intervalo das 8:00h às 18:00h. Não há
conflito de horário caso as duas reservas possam ser atendidas dentre o intervalo de tempo
estabelecido.
|#

; ##############################################################################################

#| Definição dos tipos de dados:
Reserva (schedule) é uma estrutura de dados contendo as seguintes propriedades:
  - início (start) é um número inteiro positivo de quatro dígitos
  - fim (end) é um número inteiro positivo de quatro dígitos
|#

; ##############################################################################################

#| Especificação:
Reserva -> boolean

Recebe uma Reserva por parâmetro e verifica se é os horários especificados
respeitam o intervalo de disponibilidade da sala. Retorna T ou F.
|#

(define (isAvailable? schedule)
  schedule)

(struct schedule )
(isAvailable? "teste")